[
  {
    "objectID": "writings.html",
    "href": "writings.html",
    "title": "john myers, ph.d.",
    "section": "",
    "text": "Einstein does deep learning\n\n\n\nPython\n\nPyTorch\n\nDeep Learning\n\nNeural networks\n\nTensors\n\nLinear algebra\n\n\n\n\n\n\n\n\n\nOct 2, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nWhat is information theory? (with SciPy!)\n\n\n\nPython\n\nSciPy\n\nInformation theory\n\nEntropy\n\nProbability\n\nSurprisal\n\n\n\n\n\n\n\n\n\nSep 30, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nPyTorch can do your calculus homework\n\n\n\nPython\n\nPyTorch\n\nDeep Learning\n\nNeural networks\n\nTensors\n\nCalculus\n\nLinear algebra\n\n\n\n\n\n\n\n\n\nSep 27, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n“Shiny” Central Limit Theorem\n\n\n\nR\n\nShiny\n\nPython\n\nSciPy\n\nInteractive\n\nProbability\n\nStatistics\n\nCentral Limit Theorem\n\n\n\n\n\n\n\n\n\nSep 25, 2025\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "courses/25-fa-analysis.html",
    "href": "courses/25-fa-analysis.html",
    "title": "mat347 analysis, fall 2025",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nec eros eget nisl posuere fermentum. Phasellus vitae augue nec justo commodo gravida. Vivamus euismod, nisi a tristique dictum, sapien libero tempor nulla, sit amet dignissim justo elit sit amet lectus. Sed euismod risus a felis facilisis, in tincidunt purus luctus."
  },
  {
    "objectID": "posts/ein-dl/index.html",
    "href": "posts/ein-dl/index.html",
    "title": "Einstein does deep learning",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nec eros eget nisl posuere fermentum. Phasellus vitae augue nec justo commodo gravida."
  },
  {
    "objectID": "posts/ein-dl/index.html#header-1",
    "href": "posts/ein-dl/index.html#header-1",
    "title": "Einstein does deep learning",
    "section": "Header 1",
    "text": "Header 1\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nec eros eget nisl posuere fermentum. Phasellus vitae augue nec justo commodo gravida. Vivamus euismod, nisi a tristique dictum, sapien libero tempor nulla, sit amet dignissim justo elit sit amet lectus. Sed euismod risus a felis facilisis, in tincidunt purus luctus.\n\n\nShow R code\nset.seed(42)\nn.samples &lt;- 10000\nxbars &lt;- numeric(n.samples)\n\nfor (i in 1:n.samples) {\n    xbars[i] &lt;- mean(rpois(100, lambda = 5))\n}\n\ndf &lt;- data.frame(xbar = xbars)\n\nggplot(data = df, aes(xbar)) +\n    geom_histogram(fill = custom_colors[\"yellow\"], color = custom_colors[\"black\"]) +\n    custom_theme() +\n    labs(x = expression(bar(x)), title = \"distribution of sample means drawn\\nfrom a Poisson distribution\")\n\n\n\n\n\n\n\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nec eros eget nisl posuere fermentum. Phasellus vitae augue nec justo commodo gravida. Vivamus euismod, nisi a tristique dictum, sapien libero tempor nulla, sit amet dignissim justo elit sit amet lectus. Sed euismod risus a felis facilisis, in tincidunt purus luctus.\n\n\nShow R code\nggplot(mpg, aes(displ, hwy)) +\n    geom_point(color = custom_colors[\"yellow\"]) +\n    custom_theme() +\n    labs(title = \"highway MPG vs. displacement\", x = \"displacement\", y = \"highway MPG\")\n\n\n\n\n\n\n\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nec eros eget nisl posuere fermentum. Phasellus vitae augue nec justo commodo gravida. Vivamus euismod, nisi a tristique dictum, sapien libero tempor nulla, sit amet dignissim justo elit sit amet lectus. Sed euismod risus a felis facilisis, in tincidunt purus luctus."
  },
  {
    "objectID": "posts/ein-dl/index.html#header-2",
    "href": "posts/ein-dl/index.html#header-2",
    "title": "Einstein does deep learning",
    "section": "Header 2",
    "text": "Header 2\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nec eros eget nisl posuere fermentum. Phasellus vitae augue nec justo commodo gravida. Vivamus euismod, nisi a tristique dictum, sapien libero tempor nulla, sit amet dignissim justo elit sit amet lectus. Sed euismod risus a felis facilisis, in tincidunt purus luctus."
  },
  {
    "objectID": "posts/pytorch-calc/index.html",
    "href": "posts/pytorch-calc/index.html",
    "title": "PyTorch can do your calculus homework",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nec eros eget nisl posuere fermentum. Phasellus vitae augue nec justo commodo gravida."
  },
  {
    "objectID": "posts/pytorch-calc/index.html#header-1",
    "href": "posts/pytorch-calc/index.html#header-1",
    "title": "PyTorch can do your calculus homework",
    "section": "Header 1",
    "text": "Header 1\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nec eros eget nisl posuere fermentum. Phasellus vitae augue nec justo commodo gravida. Vivamus euismod, nisi a tristique dictum, sapien libero tempor nulla, sit amet dignissim justo elit sit amet lectus. Sed euismod risus a felis facilisis, in tincidunt purus luctus.\n\n\nShow R code\nset.seed(42)\nn.samples &lt;- 10000\nxbars &lt;- numeric(n.samples)\n\nfor (i in 1:n.samples) {\n    xbars[i] &lt;- mean(rpois(100, lambda = 5))\n}\n\ndf &lt;- data.frame(xbar = xbars)\n\nggplot(data = df, aes(xbar)) +\n    geom_histogram(fill = custom_colors[\"yellow\"], color = custom_colors[\"black\"]) +\n    custom_theme() +\n    labs(x = expression(bar(x)), title = \"distribution of sample means drawn\\nfrom a Poisson distribution\")\n\n\n\n\n\n\n\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nec eros eget nisl posuere fermentum. Phasellus vitae augue nec justo commodo gravida. Vivamus euismod, nisi a tristique dictum, sapien libero tempor nulla, sit amet dignissim justo elit sit amet lectus. Sed euismod risus a felis facilisis, in tincidunt purus luctus.\n\n\nShow R code\nggplot(mpg, aes(displ, hwy)) +\n    geom_point(color = custom_colors[\"yellow\"]) +\n    custom_theme() +\n    labs(title = \"highway MPG vs. displacement\", x = \"displacement\", y = \"highway MPG\")\n\n\n\n\n\n\n\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nec eros eget nisl posuere fermentum. Phasellus vitae augue nec justo commodo gravida. Vivamus euismod, nisi a tristique dictum, sapien libero tempor nulla, sit amet dignissim justo elit sit amet lectus. Sed euismod risus a felis facilisis, in tincidunt purus luctus."
  },
  {
    "objectID": "posts/pytorch-calc/index.html#header-2",
    "href": "posts/pytorch-calc/index.html#header-2",
    "title": "PyTorch can do your calculus homework",
    "section": "Header 2",
    "text": "Header 2\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nec eros eget nisl posuere fermentum. Phasellus vitae augue nec justo commodo gravida. Vivamus euismod, nisi a tristique dictum, sapien libero tempor nulla, sit amet dignissim justo elit sit amet lectus. Sed euismod risus a felis facilisis, in tincidunt purus luctus."
  },
  {
    "objectID": "posts/scipy-info/index.html",
    "href": "posts/scipy-info/index.html",
    "title": "What is information theory? (with SciPy!)",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nec eros eget nisl posuere fermentum. Phasellus vitae augue nec justo commodo gravida."
  },
  {
    "objectID": "posts/scipy-info/index.html#header-1",
    "href": "posts/scipy-info/index.html#header-1",
    "title": "What is information theory? (with SciPy!)",
    "section": "Header 1",
    "text": "Header 1\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nec eros eget nisl posuere fermentum. Phasellus vitae augue nec justo commodo gravida. Vivamus euismod, nisi a tristique dictum, sapien libero tempor nulla, sit amet dignissim justo elit sit amet lectus. Sed euismod risus a felis facilisis, in tincidunt purus luctus.\n\n\nShow R code\nset.seed(42)\nn.samples &lt;- 10000\nxbars &lt;- numeric(n.samples)\n\nfor (i in 1:n.samples) {\n    xbars[i] &lt;- mean(rpois(100, lambda = 5))\n}\n\ndf &lt;- data.frame(xbar = xbars)\n\nggplot(data = df, aes(xbar)) +\n    geom_histogram(fill = custom_colors[\"yellow\"], color = custom_colors[\"black\"]) +\n    custom_theme() +\n    labs(x = expression(bar(x)), title = \"distribution of sample means drawn\\nfrom a Poisson distribution\")\n\n\n\n\n\n\n\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nec eros eget nisl posuere fermentum. Phasellus vitae augue nec justo commodo gravida. Vivamus euismod, nisi a tristique dictum, sapien libero tempor nulla, sit amet dignissim justo elit sit amet lectus. Sed euismod risus a felis facilisis, in tincidunt purus luctus.\n\n\nShow R code\nggplot(mpg, aes(displ, hwy)) +\n    geom_point(color = custom_colors[\"yellow\"]) +\n    custom_theme() +\n    labs(title = \"highway MPG vs. displacement\", x = \"displacement\", y = \"highway MPG\")\n\n\n\n\n\n\n\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nec eros eget nisl posuere fermentum. Phasellus vitae augue nec justo commodo gravida. Vivamus euismod, nisi a tristique dictum, sapien libero tempor nulla, sit amet dignissim justo elit sit amet lectus. Sed euismod risus a felis facilisis, in tincidunt purus luctus."
  },
  {
    "objectID": "posts/scipy-info/index.html#header-2",
    "href": "posts/scipy-info/index.html#header-2",
    "title": "What is information theory? (with SciPy!)",
    "section": "Header 2",
    "text": "Header 2\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nec eros eget nisl posuere fermentum. Phasellus vitae augue nec justo commodo gravida. Vivamus euismod, nisi a tristique dictum, sapien libero tempor nulla, sit amet dignissim justo elit sit amet lectus. Sed euismod risus a felis facilisis, in tincidunt purus luctus."
  },
  {
    "objectID": "posts/shiny-clt/index.html",
    "href": "posts/shiny-clt/index.html",
    "title": "“Shiny” Central Limit Theorem",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nec eros eget nisl posuere fermentum. Phasellus vitae augue nec justo commodo gravida."
  },
  {
    "objectID": "posts/shiny-clt/index.html#header-1",
    "href": "posts/shiny-clt/index.html#header-1",
    "title": "“Shiny” Central Limit Theorem",
    "section": "Header 1",
    "text": "Header 1\nLoad R libraries:\n\nlibrary(\"ggplot2\")\nlibrary(\"latex2exp\")\nlibrary(\"reticulate\") \ncondaenv.name &lt;- \"default-env\"\nuse_condaenv(condaenv.name, required = TRUE)\n\nLoad Python libraries:\n\nimport scipy.stats as ss\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nConstruct the PDF for the mixture of Gaussians:\n\nweights &lt;- c(0.2, 0.3, 0.1, 0.4)\nmeans &lt;- c(0, 3, 5, 10)\nsds &lt;- c(1, 0.75, 0.5, 2)\n\nmixture.pdf &lt;- function(x) {\n  rowSums(\n    sapply(\n      X = seq_along(weights),\n      FUN = function(i) weights[i] * dnorm(x, mean = means[i], sd = sds[i])\n    )\n  )\n}\n\nPlot the PDF of the mixture of Gaussians:\n\n\nCode\nggplot(data.frame(x = c(-4, 14)), aes(x)) +\n  stat_function(fun = mixture.pdf, color = yellow, linewidth = 1, n = 250) +\n  labs(y = \"density\", title = \"mixture of gaussians\")\n\n\n\n\n\n\n\n\n\nDefine an R function for plotting sampling distributions of the mean:\n\nplot.sampling.dist &lt;- function(df.sample, n.sample, mu, sigma, bins = 50, alpha = 0.5) {\n  \n  ggplot(df.sample, aes(x = xbar)) +\n    geom_histogram(\n      aes(y = after_stat(density)),\n      color = grey,\n      bins = bins,\n      alpha = alpha,\n      fill = yellow\n    ) +\n    stat_density(\n      aes(color = \"data\"),\n      geom = \"line\",\n      linewidth = 1\n    ) +\n    stat_function(\n      aes(color = \"normal\"),\n      fun = function(x) dnorm(x, mean = mu, sd = sigma),\n      linewidth = 1   \n    ) + \n    scale_color_manual(\n      name = NULL,\n      values = c(\"data\" = yellow, \"normal\" = blue)\n    ) +\n    labs(\n      x = TeX(\"$\\\\bar{x}$\"),\n      title = TeX(paste0(\"sampling distribution for $\\\\bar{X}_{\", n.sample, \"}$\"))\n    )\n}\n\nDefine an R function for generating a sample for the sample mean of the mixture of Gaussians:\n\ngenerate.mixture.sample &lt;- function(n.sample, n.replicates, n.components, weights, means, sds) {\n  \n  components &lt;- sample(\n    1:n.components,\n    size = n.replicates * n.sample,\n    replace = TRUE,\n    prob = weights\n  )\n\n  matrix.sample &lt;- matrix(\n    rnorm(n.replicates * n.sample, mean = means[components], sd = sds[components]),\n    nrow = n.replicates,\n    ncol = n.sample\n  )\n\n  df.sample &lt;- data.frame(xbar = rowMeans(matrix.sample))\n  \n  return(df.sample)\n}\n\nDefine an R function for computing the mean and standard deviation of the mixture of Gaussians:\n\ngenerate.mixture.stats &lt;- function(n.sample, weights, means, sds) {\n\n  second.moments &lt;- means ** 2 + sds ** 2\n  mu &lt;- as.numeric(weights %*% means)\n  sigma &lt;- sqrt(as.numeric(weights %*% second.moments - (weights %*% means) ** 2) / n.sample)\n  \n  return(c(mu = mu, sigma = sigma))\n}\n\nPlot the sample mean \\(\\overline{X}_3\\) of the mixture of Gaussians:\n\n\nCode\nn.sample &lt;- 3\nn.replicates &lt;- 1000\nn.components &lt;- 4\n\ndf.sample &lt;- generate.mixture.sample(n.sample, n.replicates, n.components, weights, means, sds)\nstats &lt;- generate.mixture.stats(n.sample, weights, means, sds)\n\nplot.sampling.dist(df.sample, n.sample, stats[\"mu\"], stats[\"sigma\"])\n\n\n\n\n\n\n\n\n\nPlot the sample mean \\(\\overline{X}_{10}\\) of the mixture of Gaussians:\n\n\nCode\nn.sample &lt;- 10\n\ndf.sample &lt;- generate.mixture.sample(n.sample, n.replicates, n.components, weights, means, sds)\nstats &lt;- generate.mixture.stats(n.sample, weights, means, sds)\n\nplot.sampling.dist(df.sample, n.sample, stats[\"mu\"], stats[\"sigma\"])\n\n\n\n\n\n\n\n\n\nPlot the sample mean \\(\\overline{X}_{100}\\) of the mixture of Gaussians:\n\n\nCode\nn.sample &lt;- 100\n\ndf.sample &lt;- generate.mixture.sample(n.sample, n.replicates, n.components, weights, means, sds)\nstats &lt;- generate.mixture.stats(n.sample, weights, means, sds)\n\nplot.sampling.dist(df.sample, n.sample, stats[\"mu\"], stats[\"sigma\"])\n\n\n\n\n\n\n\n\n\nPlot the PDF of a log-normal distribution in Python:\n\n\nCode\nmeanlog = 1\nsdlog = 0.75\nX = ss.lognorm(s=sdlog, scale=np.exp(meanlog))\n\nlognorm_mean = X.mean()\n\nx_grid = np.linspace(0, 13, num=250)\n\n_, ax = plt.subplots()\nax.plot(x_grid, X.pdf(x_grid), color=yellow)\nax.set_title('log-normal')\nax.set_xlabel('x')\nax.set_ylabel('density')\nplt.tight_layout()\nplt.show()"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "john myers, ph.d.",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nec eros eget nisl posuere fermentum. Phasellus vitae augue nec justo commodo gravida. Vivamus euismod, nisi a tristique dictum, sapien libero tempor nulla, sit amet dignissim justo elit sit amet lectus. Sed euismod risus a felis facilisis, in tincidunt purus luctus.\n\n\n\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nec eros eget nisl posuere fermentum. Phasellus vitae augue nec justo commodo gravida. Vivamus euismod, nisi a tristique dictum, sapien libero tempor nulla, sit amet dignissim justo elit sit amet lectus. Sed euismod risus a felis facilisis, in tincidunt purus luctus. Blah! Blah! Blah! Blah! Blah! Blah! Blah! Blah!\n\n\n\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nec eros eget nisl posuere fermentum. Phasellus vitae augue nec justo commodo gravida. Vivamus euismod, nisi a tristique dictum, sapien libero tempor nulla, sit amet dignissim justo elit sit amet lectus. Sed euismod risus a felis facilisis, in tincidunt purus luctus."
  },
  {
    "objectID": "courses/25-fa-calculus-ii.html",
    "href": "courses/25-fa-calculus-ii.html",
    "title": "mat220 calculus II, fall 2025",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nec eros eget nisl posuere fermentum. Phasellus vitae augue nec justo commodo gravida. Vivamus euismod, nisi a tristique dictum, sapien libero tempor nulla, sit amet dignissim justo elit sit amet lectus. Sed euismod risus a felis facilisis, in tincidunt purus luctus."
  }
]